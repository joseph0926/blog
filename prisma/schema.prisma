generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["views"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum FormFactor {
  desktop
  mobile
}

enum Environment {
  prod
  dev
}

model User {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  email        String         @unique
  password     String
  RefreshToken RefreshToken[]
}

model Post {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  slug      String   @unique

  title       String
  description String
  thumbnail   String?

  tags Tag[]

  @@index([createdAt, id])
}

model Tag {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name String @unique

  posts Post[]
}

model RefreshToken {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())

  token     String   @unique
  expiresAt DateTime
  revoked   Boolean  @default(false)

  user   User   @relation(fields: [userId], references: [id])
  userId String

  @@index([token])
}

model ApiMetric {
  id          BigInt      @id @default(autoincrement())
  ts          DateTime    @default(now())
  day         DateTime
  route       String
  method      String
  statusCode  Int
  backend     String
  region      String?
  reqDur      Float
  dbDur       Float?
  cpuMs       Float?
  memRssMb    Float?
  cacheHit    Boolean     @default(false)
  appVersion  String
  environment Environment @default(prod)

  @@index([day, route, method, statusCode])
  @@index([appVersion, route, ts])
}

model RumMetric {
  id         BigInt     @id @default(autoincrement())
  ts         DateTime   @default(now())
  day        DateTime
  url        String?
  route      String
  formFactor FormFactor
  lcp        Float?
  fid        Float?
  cls        Float?
  inp        Float?
  ttfb       Float?
  fcp        Float?

  deviceMem   Float?
  connType    String?
  userAgent   String?
  appVersion  String
  environment Environment @default(prod)

  @@index([day, route, formFactor])
}

model BuildArtifact {
  id           BigInt      @id @default(autoincrement())
  ts           DateTime    @default(now())
  commitHash   String      @db.Char(40)
  branch       String
  bundleKb     Float
  bundleGzipKb Float?
  reportUrl    String?
  environment  Environment @default(prod)

  @@index([branch, ts])
}

view ApiMetricHourlyMV {
  bucket     DateTime
  route      String
  appVersion String
  hits       Int
  p95Req     Float
  p99Req     Float
  p95Db      Float?
  p99Db      Float?

  @@map("ApiMetricHourlyMV")
  @@ignore
}
